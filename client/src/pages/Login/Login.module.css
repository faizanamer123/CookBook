.loginPage {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  padding: 2rem;
}

.loginContainer {
  background: var(--background);
  padding: 2.5rem;
  border-radius: 1rem;
  box-shadow: 0 4px 6px rgba(157, 126, 216, 0.4);
  padding: 2.5rem;
  width: 100%;
  max-width: 450px;
  animation: fadeIn 0.3s ease-out;
}

.loginHeader {
  text-align: center;
  margin-bottom: 2rem;
}

.loginHeader h1 {
  font-size: 2rem;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
}

.loginHeader p {
  color: var(--text-secondary);
  font-size: 1rem;
}

.socialLogin {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.socialButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: 0.5rem;
  background: var(--background);
  transition: all 0.3s ease;
}

.socialButton:hover:not(:disabled) {
  background: var(--hover);
  transform: translateY(-1px);
}

.socialIcon {
  width: 24px;
  height: 24px;
  object-fit: contain;
}

.divider {
  position: relative;
  text-align: center;
  margin: 1.5rem 0;
  color: var(--text-secondary);
}

.divider::before,
.divider::after {
  content: '';
  position: absolute;
  top: 50%;
  width: calc(50% - 30px);
  height: 1px;
  background: #e0e0e0;
  border-bottom: 1px solid var(--border-color);
}

.divider::before {
  left: 0;
}

.divider::after {
  right: 0;
}

.divider span {
  background: var(--background);
  padding: 0 1rem;
  font-size: 0.875rem;
}

.loginForm {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.formGroup label {
  font-size: 0.875rem;
  color: var(--text-primary);
  font-weight: 500;
}

.formGroup input {
  padding: 0.75rem 1rem;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  font-size: 1rem;
  transition: all 0.3s ease;
  background: var(--background);
  color: var(--text-primary);
}

.formGroup input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 2px var(--primary-light);
}

.formGroup input.inputError {
  border-color: #e74c3c;
}

.error {
  color: #e74c3c;
  font-size: 0.875rem;
}

.errorMessage {
  background: #fde8e8;
  color: #e74c3c;
  padding: 0.75rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  text-align: center;
}

.formFooter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.875rem;
}

.rememberMe {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: #666;
}

.rememberMe input[type="checkbox"] {
  width: 16px;
  height: 16px;
  border-radius: 4px;
  border: 1px solid #e0e0e0;
  cursor: pointer;
}

.forgotPassword {
  color: #4a90e2;
  text-decoration: none;
  transition: color 0.2s ease;
}

.forgotPassword:hover {
  color: #357abd;
}

.signupPrompt {
  text-align: center;
  margin-top: 1.5rem;
  color: #666;
  font-size: 0.875rem;
}

.signupLink {
  color: #4a90e2;
  text-decoration: none;
  font-weight: 500;
  transition: color 0.2s ease;
}

.signupLink:hover {
  color: #357abd;
}

@media (max-width: 480px) {
  .loginPage {
    padding: 1rem;
  }

  .loginContainer {
    padding: 1.5rem;
  }

  .loginHeader h1 {
    font-size: 1.75rem;
  }

  .formFooter {
    flex-direction: column;
    gap: 1rem;
    align-items: flex-start;
  }
}

.dark.loginPage {
  background: var(--background);
}

.dark .loginContainer {
  background: var(--background);
  color: var(--text);
  box-shadow: 0 4px 6px rgba(157,126,216,0.4);
}

.dark .loginHeader h1 {
  color: var(--text);
}

.dark .loginHeader p {
  color: var(--text-muted);
}

.dark .formGroup label {
  color: var(--text);
}

.dark .formGroup input {
  background: var(--background);
  color: var(--text);
  border-color: var(--border-color);
}

.dark .formGroup input:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 2px var(--primary-light);
}

.dark .formGroup input.inputError {
  border-color: var(--error);
}

.dark .errorMessage {
  background: var(--error-light);
  color: var(--error);
}

.dark .divider span {
  background: var(--background);
  color: var(--text-muted);
} 